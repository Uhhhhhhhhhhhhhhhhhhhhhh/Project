/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Data;

import Calendar.CalendarEvent;
import Calendar.CourseToEvents;
import Calendar.CreatePanels;
import Calendar.WeekCalendar;
import Main.ApplicationFrame;
import Main.SQLPreparedStatements;
import View.Item.*;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.sql.Time;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import javax.swing.JInternalFrame;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Derek
 */
public class DataRoomPanel extends javax.swing.JPanel {

    int visual;
    
    /**
     * Creates new form DataFacultyPanel
     */
    public DataRoomPanel(int visual) {
        this.visual = visual;
        initComponents();
        jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
    }
    
    
    public DefaultListModel createRoomList(){
        ArrayList<ArrayList> rooms = SQLPreparedStatements.getRooms();
        
        DefaultListModel lmroom = new DefaultListModel();
        
        for(int i = 0; i < rooms.get(0).size(); i++) {
            lmroom.addElement(rooms.get(0).get(i) + " " + rooms.get(1).get(i) + " -   Lab: " + rooms.get(2).get(i) + "   Capacity: " + rooms.get(3).get(i));
        }
        
        return lmroom;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Room Information");

        jList1.setModel(createRoomList());
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jList1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Building", "Room Number" }));

        jButton1.setText("Search");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (evt.getClickCount() == 2) {
            if (visual == 0) {
                singleItem();
            } else if (visual == 1) {
                calendarStuff();
            }
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        if (visual == 1 && evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            calendarStuff();
        }
    }//GEN-LAST:event_jList1KeyPressed

    private void calendarStuff(){
        ArrayList<ArrayList> fca = SQLPreparedStatements.getFCA();
        ArrayList<CalendarEvent> fcas = new ArrayList<>();
        ArrayList<ArrayList> room = SQLPreparedStatements.getRooms();
        String building = (String) room.get(0).get(jList1.getSelectedIndex());
        String num = (String) room.get(1).get(jList1.getSelectedIndex());
        
        for (int index : jList1.getSelectedIndices()) {
            String r = (String) fca.get(1).get(index);
            String b = (String) fca.get(0).get(index);
            if(b.equals(building) && r.equals(num)){
              String course_id = (String) fca.get(3).get(index);
                String section_num = (String) fca.get(2).get(index);
                Date start_date = (Date) fca.get(6).get(index);
                Date end_date = (Date) fca.get(7).get(index);
                String days = (String) SQLPreparedStatements.getSingleTime((int) fca.get(5).get(index)).get(1);
                Time start_time = (Time) SQLPreparedStatements.getSingleTime((int) fca.get(5).get(index)).get(2);
                Time end_time = (Time) SQLPreparedStatements.getSingleTime((int) fca.get(5).get(index)).get(3);

                fcas.addAll(CourseToEvents.fcaToCalendarEvent(course_id, section_num, "COURSE SUB - NUM - SECTION", start_date.toLocalDate(), end_date.toLocalDate(), start_time.toLocalTime(), end_time.toLocalTime(), days));
            }
        }
        JInternalFrame jif = new JInternalFrame("Calendar: Room's", true, true, true, true);
        jif.setBounds(0, 0, 1000, 900);
        jif.setLocation(ApplicationFrame.XOFFSET * ApplicationFrame.openFrameCount, ApplicationFrame.YOFFSET * ApplicationFrame.openFrameCount);
        ApplicationFrame.openFrameCount++;

        WeekCalendar cal = CreatePanels.createWeekCalendarPanel(fcas);

        jif.add(CreatePanels.createWeekControlPanel(cal), BorderLayout.NORTH);
        jif.add(cal, BorderLayout.CENTER);
        jif.setVisible(true);
        ApplicationFrame.jDesktop.add(jif);
        jif.toFront();
        
        
        
    }
    
    private void singleItem() {
            ArrayList<ArrayList> room = SQLPreparedStatements.getRooms();
            String building = (String) room.get(0).get(jList1.getSelectedIndex());
            String num = (String) room.get(1).get(jList1.getSelectedIndex());
            
            JInternalFrame jif = new JInternalFrame("Item: Room " + building + " " + num, true, true, true, true);
            
            jif.setBounds(0, 0, 329, 410);
            jif.setLocation(ApplicationFrame.XOFFSET * ApplicationFrame.openFrameCount, ApplicationFrame.YOFFSET * ApplicationFrame.openFrameCount);
            ApplicationFrame.openFrameCount++;
            jif.add((new ItemRoomPanel(SQLPreparedStatements.getSingleRoom(building, num))));
            jif.setVisible(true);
            ApplicationFrame.jDesktop.add(jif);
            jif.toFront();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
